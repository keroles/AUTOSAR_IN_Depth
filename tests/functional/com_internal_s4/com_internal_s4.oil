/**
 * @file com_internal_s4.oil
 *
 * @section desc File description
 *
 * @section copyright Copyright
 *
 * Trampoline Test Suite
 *
 * Trampoline Test Suite is copyright (c) IRCCyN 2005-2007
 * Trampoline Test Suite is protected by the French intellectual property law.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; version 2
 * of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * @section infos File informations
 *
 * $Date$
 * $Rev$
 * $Author$
 * $URL$
 */

OIL_VERSION = "2.5" : "com_internal_s4";

#include <arch.oil>

IMPLEMENTATION trampoline {
  TASK {
    UINT32 PRIORITY = 1;
  };
  ISR {
  };
};

CPU test {
  OS config {
    STATUS = EXTENDED;
    SHUTDOWNHOOK = TRUE;
    BUILD = TRUE {
      APP_SRC = "com_internal_s4.c";
      APP_SRC = "task1_instance.c";
      APP_SRC = "task2_instance.c";
      APP_SRC = "task3_instance.c";
      APP_SRC = "task4_instance.c";
      APP_SRC = "comcallback_instance.c";
      TRAMPOLINE_BASE_PATH = "../../..";
      APP_NAME = "com_internal_s4_exe";  
    };
  };

  COM config {
    COMERRORHOOK = FALSE;
    COMSTATUS = COMEXTENDED;
    COMUSEGETSERVICEID = FALSE;
    COMUSEPARAMETERACCESS = FALSE;
    COMSTARTCOMEXTENSION = FALSE;
  };
 
  APPMODE std {
  };

  TASK t1 {
    PRIORITY = 1;
    AUTOSTART = TRUE { APPMODE = std; };
    ACTIVATION = 1;
    SCHEDULE = NON;
    MESSAGE = sm_activatetask;
    MESSAGE = sm_setevent;
    MESSAGE = sm_comcallback;
    MESSAGE = sm_flag;
    MESSAGE = rm_comcallback;
  };

  TASK t2 {
    PRIORITY = 2;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = NON;
    MESSAGE = rm_activatetask;
  };
 
  TASK t3 {
    PRIORITY = 2;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = NON;
    MESSAGE = rm_setevent;
    EVENT = Event1;
  };
 
  TASK t4 {
    PRIORITY = 1;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = NON;
    MESSAGE = rm_flag;
  };
 
  MESSAGE sm_activatetask {
    MESSAGEPROPERTY = SEND_STATIC_INTERNAL {
      CDATATYPE = "uint8";
    };
    NOTIFICATION = NONE;
  };
    
  MESSAGE rm_activatetask {
    MESSAGEPROPERTY = RECEIVE_UNQUEUED_INTERNAL {
      SENDINGMESSAGE = sm_activatetask;
      INITIALVALUE = 0;
      FILTER = ALWAYS;
    };
    NOTIFICATION = ACTIVATETASK {
      TASK = t2;
    };
  };
 
  MESSAGE sm_setevent {
    MESSAGEPROPERTY = SEND_STATIC_INTERNAL {
      CDATATYPE = "uint8";
    };
    NOTIFICATION = NONE;
  };
    
  MESSAGE rm_setevent {
    MESSAGEPROPERTY = RECEIVE_UNQUEUED_INTERNAL {
      SENDINGMESSAGE = sm_setevent;
      INITIALVALUE = 0;
      FILTER = ALWAYS;
    };
    NOTIFICATION = SETEVENT {
      TASK = t3;
      EVENT = Event1;
    };
  };
 
  MESSAGE sm_comcallback {
    MESSAGEPROPERTY = SEND_STATIC_INTERNAL {
      CDATATYPE = "uint8";
    };
    NOTIFICATION = NONE;
  };
    
  MESSAGE rm_comcallback {
    MESSAGEPROPERTY = RECEIVE_UNQUEUED_INTERNAL {
      SENDINGMESSAGE = sm_comcallback;
      INITIALVALUE = 0;
      FILTER = ALWAYS;
    };
    NOTIFICATION = COMCALLBACK {
      CALLBACKROUTINENAME = "ComCallBack";
    };
  };

  MESSAGE sm_flag {
    MESSAGEPROPERTY = SEND_STATIC_INTERNAL {
      CDATATYPE = "uint8";
    };
    NOTIFICATION = NONE;
  };
    
  MESSAGE rm_flag {
    MESSAGEPROPERTY = RECEIVE_UNQUEUED_INTERNAL {
      SENDINGMESSAGE = sm_flag;
      INITIALVALUE = 0;
      FILTER = ALWAYS;
    };
    NOTIFICATION = FLAG {
      FLAGNAME = "flagnam";
    };
  };

  EVENT Event1{
    MASK = AUTO;
  };
};

/* End of file com_internal_s4.oil */
