/**
 * @file autosar_tp_s8/autosar_tp_s8.oil
 *
 * @section desc File description
 *
 * @section copyright Copyright
 *
 * Trampoline Test Suite
 *
 * Trampoline Test Suite is copyright (c) IRCCyN 2005-2007
 * Trampoline Test Suite is protected by the French intellectual property law.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; version 2
 * of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * @section infos File informations
 *
 * $Date$
 * $Rev$
 * $Author$
 * $URL$
 */

OIL_VERSION = "2.5" : "autosar_st_s8" ;

#include <arch.oil>

IMPLEMENTATION trampoline {

 OS {
  ENUM [EXTENDED] STATUS;
 };
 
    TASK {
        UINT32 [1..10] PRIORITY = 1 ;
    } ;
};

 CPU test {

    OS config {
        STATUS = EXTENDED;
        APP_SRC = "autosar_tp_s8.c";
        APP_SRC = "task1_instance1.c";
        APP_SRC = "task1_instance2.c";
        APP_SRC = "task1_instance3.c";
        APP_SRC = "protection_instance.c";
        TRAMPOLINE_BASE_PATH = "../../..";
        APP_NAME = "autosar_tp_s8_exe";
        SHUTDOWNHOOK = TRUE;
        ERRORHOOK = TRUE;
        USEGETSERVICEID = TRUE;
        USEPARAMETERACCESS = TRUE;
        PROTECTIONHOOK = TRUE;
 };

 APPMODE std {};

 TASK t1 {
  AUTOSTART = TRUE { APPMODE = std; };
  PRIORITY = 2;
  ACTIVATION = 1;
  SCHEDULE = FULL;
  TIMING_PROTECTION = TRUE {
    EXECUTIONBUDGET = 1;
    TIMEFRAME = 100; /* inferior than alarm first period (20*10ms) and superior than alarm second period (5*10ms) */
    MAXOSINTERRUPTLOCKTIME = 1;
    MAXALLINTERRUPTLOCKTIME = 1;
  };
  EVENT = t1_event1;
 };
 COUNTER Hardware_Counter{
  MAXALLOWEDVALUE = 21;
  TICKSPERBASE = 1;
  MINCYCLE = 1;
  TYPE = HARDWARE {};
 };
 ALARM alarm1 {
  COUNTER = Hardware_Counter;
  ACTION = SETEVENT {
    TASK = t1;
    EVENT = t1_event1;
  };
  AUTOSTART = TRUE {
    ALARMTIME = 1;
    CYCLETIME = 20;
    APPMODE = std;
  };
 };
 EVENT t1_event1{ MASK = AUTO;};
};

/* End of file autosar_tp_s8/autosar_tp_s8.oil */
