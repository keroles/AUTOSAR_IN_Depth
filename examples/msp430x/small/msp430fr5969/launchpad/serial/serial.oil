OIL_VERSION = "2.5";

IMPLEMENTATION trampoline {
  /* This fix the default STACKSIZE of tasks */
  TASK {
    UINT32 STACKSIZE = 100 ;
  } ;

  /* This fix the default STACKSIZE of ISRs */
  ISR {
    UINT32 STACKSIZE = 100 ;
  } ;
};

CPU serial {
  OS config {
    STATUS = EXTENDED;
    PAINT_STACK = TRUE;
    PAINT_REGISTERS = TRUE;
    CPU_FREQ_MHZ = 8;
    
    BUILD = TRUE {
      TRAMPOLINE_BASE_PATH = "../../../../../..";
      APP_SRC = "serial.c";
      APP_NAME = "serial_exe";
      CFLAGS  = "-O0 -g3 -gdwarf-2 -ggdb"; //gdb usage
      LDFLAGS = "-Map=serial.map";
      LIBRARY = serial {
        TXBUFFER = 16;
        RXBUFFER = 16;
      };
      //use either msp-gcc (provided with Energia)..
      // COMPILER  = "msp430-gcc";
      // ASSEMBLER = "msp430-gcc";
      // LINKER    = "msp430-ld";
      // COPIER    = "msp430-objcopy";
      //or GCC for MSP (provided by TI)
      COMPILER  = "msp430-elf-gcc";
      ASSEMBLER = "msp430-elf-gcc";
      LINKER    = "msp430-elf-ld";
      COPIER    = "msp430-elf-objcopy";
      SYSTEM = PYTHON;
    };
    SYSTEM_CALL = TRUE;
    MEMMAP = TRUE {
      COMPILER = gcc;
      LINKER = gnu_ld { SCRIPT = "script.ld"; };
      ASSEMBLER = gnu_as;
      MEMORY_PROTECTION = FALSE;
    };
  };
  
  APPMODE std {};
  
  TASK serial_TX {
    PRIORITY = 2;
    AUTOSTART = TRUE {APPMODE = std;};
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };

  TASK serial_RX {
    PRIORITY = 4;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };

  ALARM ALSerial_RX {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = serial_RX;
    };
    AUTOSTART = TRUE {
      APPMODE = std;
      ALARMTIME = 200;
      CYCLETIME = 200;
    };
  };
};

