IMPLEMENTATION posix {

  OS {
    BOOLEAN [
      TRUE {
        STRING APP_SRC[];
        STRING CFLAGS[];
        STRING CPPFLAGS[];
        STRING ASFLAGS[];
        STRING LDFLAGS[];
        STRING APP_NAME = "trampoline";
        STRING TRAMPOLINE_BASE_PATH = "..";
        STRING COMPILER = "gcc";
        STRING ASSEMBLER = "gcc";
        STRING LINKER = "gcc";
        ENUM [
          can
        ] LIBRARY[];
      },
      FALSE
    ] BUILD = FALSE;

    BOOLEAN [
      TRUE {
        ENUM [json] FORMAT = json;
      },
      FALSE
    ] TRACE = FALSE;
  };
  
  TASK {
    UINT32 STACKSIZE = 32768;
  };
  
  ISR {
    UINT32 STACKSIZE = 32768;
    ENUM [SIGTERM, SIGQUIT, SIGUSR2, SIGPIPE, SIGTRAP] SOURCE; 
  };

  COUNTER {
    UINT32 MAXALLOWEDVALUE = 4294967295; /*32 bits unsigned value*/
  };
  
  SENSOR [] {
    UINT32 [1..4] PORT;
    UINT32 PERIOD;
    MESSAGE_TYPE MESSAGE;
  };
};

CPU posix {

  PLATFORM_FILES posix_port {
    PATH = "posix";
    CFILE = "tpl_machine_posix.c";
    CFILE = "tpl_viper_interface.c";
    CFILE = "tpl_posix_autosar.c";
    CFILE = "tpl_posix_irq.c";
    CFILE = "tpl_posix_context.c";
    CFILE = "tpl_posixvp_irq_gen.c";
  };

  PLATFORM_FILES posix_port_trace {
    IF = TRACE;
    PATH = "posix";
    CFILE = "tpl_trace.c";
  };

  PLATFORM_FILES viper {
    PATH = "../viper";
  };

  LIBRARY net_can_demo_driver {
    GLOBAL = TRUE;
    PATH = "drivers/can/posix";
  };

  LIBRARY can {
    GLOBAL = TRUE;
    NEEDS = net_can_demo_driver;
    PATH = "net/can";
  };
};

