/**
 * @file % !FILENAME %
 *
 * @section desc File description
 *
 * Initialization of uninitialized vars (called from bootstrap, 
 * before starting main function)
 * Automatically generated by goil on % !TIMESTAMP %
 * from root OIL file % !OILFILENAME %
 *
 * @section copyright Copyright
 *
 * Trampoline OS
 *
 * Trampoline is copyright (c) IRCCyN 2005-2007
 * Trampoline is protected by the French intellectual property law.
 *
 * This software is distributed under the Lesser GNU Public Licence
 *
 * @section infos File informations
 *
 * $Date$
 * $Rev$
 * $Author$
 * $URL$
 */
#include "tpl_compiler.h"
#include "tpl_os_std_types.h"

extern uint8 common_zeroed_vars_begin;
extern uint8 common_zeroed_vars_end;
% if USEMEMORYMAPPING then
%extern uint8 kernel_zeroed_vars_begin;
extern uint8 kernel_zeroed_vars_end;
%  foreach PROCESSES do
%extern uint8 % !PROCESSKIND %_% !NAME %_zeroed_vars_begin;
extern uint8 % !PROCESSKIND %_% !NAME %_zeroed_vars_end;
%  end foreach
   foreach OSAPPLICATIONS do
%extern uint8 app_% !NAME %_zeroed_vars_begin;
extern uint8 app_% !NAME %_zeroed_vars_end;
%   end foreach
end if
%

#define OS_START_SEC_CODE
#include "tpl_memmap.h"

STATIC FUNC(void, OS_CODE) fill_with_zeros (uint8 *from, uint8 *to)
{
  uint8 *zero_vars_ptr;
  if (from != to)
  {
    zero_vars_ptr = from;
    do  
    {
      *zero_vars_ptr = 0;
      zero_vars_ptr++;
    }
    while (zero_vars_ptr != to);
  }
}

FUNC(void, OS_CODE) tpl_bootstrap_init_noinit_var_sections (void)
{
  fill_with_zeros (&common_zeroed_vars_begin, &common_zeroed_vars_end);
% if USEMEMORYMAPPING then %
  fill_with_zeros (&kernel_zeroed_vars_begin, &kernel_zeroed_vars_end);
%
  foreach PROCESSES do
%  fill_with_zeros (&% !PROCESSKIND %_% !NAME %_zeroed_vars_begin, &% !PROCESSKIND %_% !NAME %_zeroed_vars_end);
% end foreach
  foreach OSAPPLICATIONS do
%  fill_with_zeros (&app_% !NAME %_zeroed_vars_begin, &app_% !NAME %_zeroed_vars_end);
%  end foreach
end if
%}

#define OS_STOP_SEC_CODE
#include "tpl_memmap.h"

