%#template for external interrupts.
# This template is called from ../interrupt_table.goilTemplate
# the objective is to generate to code snippet to
# - check if the external interrupt is set
# - call the external interrupt handler
# - acknowledge the interrut

let pin := ""
foreach src in [obj::SOURCE_S map] do
  if typeof src == @string then
    let pin := src
  end if
end foreach
let num := [pin subString: 2, 2]

if exists isISR2 then #called for ISR2
%  if(EXTI->PR & EXTI_PR_PR%!num%) {
     tpl_fast_central_interrupt_handler(%!obj::NAME%_id);
     EXTI->PR = EXTI_PR_PR%!num%; /* ack */
  }
%
elsif exists isISR1 then #called for ISR1
%  if(EXTI->PR & EXTI_PR_PR%!num%) {
     %!obj::NAME %_function();
     EXTI->PR = EXTI_PR_PR%!num%; /* ack */
  }
%
elsif exists isCounter then #called for Counter
%  if(EXTI->PR & EXTI_PR_PR%!num%) {
     tpl_tick_% !objCounter_KEY %();
     EXTI->PR = EXTI_PR_PR%!num%; /* ack */
  }
%
else #error here: "should not happen: either ISR1 or ISR2"
end if
