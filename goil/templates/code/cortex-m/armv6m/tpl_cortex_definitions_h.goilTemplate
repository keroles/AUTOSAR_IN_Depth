/**
 * @file tpl_cortex_definitions.h
 *
 * @section descr File description
 *
 * Defines related to the cortex target platform
 *
 * Generated from application % !CPUNAME %
 * Automatically generated by goil on % !TIMESTAMP %
 * from root OIL file % !OILFILENAME %
 *
 * @section infos File informations
 *
 * $$Date$$
 * $$Rev$$
 * $$Author$$
 * $$URL$$
 */

#ifndef TPL_CORTEX_DEFINITIONS_H
#define TPL_CORTEX_DEFINITIONS_H
%

# Check the CORTEX object exists
let kernel_prio := 0
let os_isr_prio := 0
if not exists CORTEX then
  error EOF: "Missing CORTEX object in the config.oil of " + TARGET
else
  if not exists CORTEX::PRIO_BITS then
    error EOF: "Missing PRIO_BITS attribute in CORTEX object in the config.oil"
  else
%  
/*-----------------------------------------------------------------------------
 * File generated for target % !TARGET %
 * Number of priority bits : % tab 35 !CORTEX::PRIO_BITS %
 */
#define PRIO_BITS_IN_NVIC%
    tab 40 - [[CORTEX::PRIO_BITS string] length] !CORTEX::PRIO_BITS%
%
    let os_isr_prio := (1 << CORTEX::PRIO_BITS) - 1
    let isr1_prio := 1
    let kernel_prio := 0
%
/*
 * Priorities are unshifted and intended to be used in NVIC_SetPriority
 */
#define KERNEL_PRIO_UNSHIFTED%
    tab 40 - [[kernel_prio string] length]
    !kernel_prio
%
#define OS_ISR_PRIO_UNSHIFTED%
    tab 40 - [[os_isr_prio string] length]
    !os_isr_prio
%
#define ISR1_IT_PRIO_UNSHIFTED%
    tab 40 - [[isr1_prio string] length]
    !isr1_prio
%

/*
 * Priorities are shifted and intended to be stored in BASEPRI
 */
#define KERNEL_PRIO%
    tab 30 - [[kernel_prio << (8 - CORTEX::PRIO_BITS) string] length]
    !kernel_prio << (8 - CORTEX::PRIO_BITS)
    tab 40
    %/* Unshifted priority: % !kernel_prio tab 65%*/%
%
#define OS_ISR_PRIO%
    tab 30 - [[os_isr_prio << (8 - CORTEX::PRIO_BITS) string] length]
    !os_isr_prio << (8 - CORTEX::PRIO_BITS)
    tab 40
    %/* Unshifted priority: % !os_isr_prio tab 65%*/%
%
#define ISR1_IT_PRIO%
    tab 30 - [[isr1_prio << (8 - CORTEX::PRIO_BITS) string] length]
    !isr1_prio << (8 - CORTEX::PRIO_BITS)
    tab 40
    %/* Unshifted priority: % !isr1_prio tab 65%*/%
  end if
end if

#------------------------------------------------------------------------------*
# Sort the ISR1 according to their priority in descending order

sort ISRS1 by PRIORITY <

#------------------------------------------------------------------------------*
# Compute their new priority 
# ISR2_IT_PRIO is used for all ISR2 handlers when OS interrupts are disabled
# SVC_EXC_PRIO is used for the SVC and the SysTick
# SVC_EXC_PRIO - 1 to 1 are used for the ISR1

let current_priority := os_isr_prio
let prioritizedISR1 := @()
let previous_priority := -1
foreach isr in ISRS1 do
  if isr::PRIORITY != previous_priority then
    let current_priority -= 1
    let previous_priority := isr::PRIORITY
  end if
  let isr::PRIORITY := current_priority
  let prioritizedISR1 += isr
end foreach

if current_priority < 1 then
  error EOF : "ISRs category 1 use more than " +
              [svc_prio - 1 string] +
              " priority levels"
end if

let ITmap := [INTERRUPT mapBy: "NAME"]

%

/*
 * Interrupt numbers for interrupt sources used by ISR
 */%
foreach isr in ISR do
  if exists ITmap[isr::SOURCE] then
    let interrupt := ITmap[isr::SOURCE]
    if interrupt::SETPRIO == true then
%
#define % !interrupt::NAME %_Number%
      tab 50 - [[interrupt::SETPRIO_S::NUMBER string] length] 
      !interrupt::SETPRIO_S::NUMBER
    else
      error isr::SOURCE : "The priority of this interrupt source is not settable"
    end if
  end if
end foreach

foreach isr in prioritizedISR1
before
%

/*
 * Computed priorities for interrupt sources used by ISR category 1
 * Priorities are unshifted and intended to be used in NVIC_SetPriority
 */%
do
  if exists ITmap[isr::SOURCE] then
    let interrupt := ITmap[isr::SOURCE]
    if interrupt::SETPRIO == true then
%
#define % !interrupt::NAME %_Priority%
      tab 50 - [[isr::PRIORITY string] length]
      !isr::PRIORITY
    else
      error isr::SOURCE : "The priority of this interrupt source is not settable"
    end if
  end if
end foreach
%

/* TPL_CORTEX_DEFINITIONS_H */
#endif

/* End of file tpl_cortex_definitions.h */
