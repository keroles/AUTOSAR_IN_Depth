\definecolor{WPAColor}{RGB}{218,232,252}     %DAE8FC => 218 232 252
\definecolor{WPAColorLine}{RGB}{108,142,191} %6C8EBF => 108 142 191
\definecolor{WPBColor}{RGB}{213,232,212}     %D5E8D4 => 213 232 212
\definecolor{WPBColorLine}{RGB}{130,179,102} %82B366 => 130 179 102
\definecolor{WPCColor}{RGB}{230,230,230}     %E6E6E6 => 230 230 230
\definecolor{WPCColorLine}{RGB}{182,182,182} %B6B6B6 => 182 182 182
\definecolor{WPDColor}{RGB}{255,233,212}     %FFE9D4 => 255 233 212
\definecolor{WPDColorLine}{RGB}{148,135,123} %94877B => 148 135 123

\begin{tikzpicture}[
WPA/.style ={WPAColorLine,fill=WPAColor,thick}, 
WPB/.style ={WPBColorLine,fill=WPBColor,thick},
WPC/.style ={WPCColorLine,fill=WPCColor,thick},
WPD/.style ={WPDColorLine,fill=WPDColor,thick},
txt/.style = {font=\Large},
boxTxt/.style = {txt,text width=3cm, text centered,text=black},
box/.style ={draw,drop shadow={opacity=0.25},boxTxt,minimum height=2cm,minimum width=4cm, inner sep=3mm},
cercle/.style ={draw,circle,drop shadow={opacity=0.25},boxTxt,minimum height=3cm,minimum width=3.5cm},
boxLegende/.style={box,minimum width=1.5cm,text width = 0cm,minimum height=1cm},
fleche/.style={->,>=stealth,line width=0.5mm},
srcFile/.style={draw,tape,drop shadow={opacity=0.25},boxTxt, minimum height=1.3cm, tape bend top=out and in, tape bend bottom=out and in}
]

  \node[WPB,srcFile,text width = 3cm] (traceJson) at (-5,3) {\texttt{trace.json}};
  \node[WPA,srcFile,text width = 6cm] (traceStaticJson) at (-7,1) {\texttt{tpl\_static\_info.json}};
  \node[WPD,srcFile,text width = 3cm] (traceTarget) at (0,7) {compressed event list};
  \node[fill=WPCColor,box,minimum height=1cm] (TraceReader)   at (0,3) {\texttt{TraceReader}};
  \node[fill=WPCColor,box,minimum height=1cm] (TraceEvaluate) at (0,0) {\texttt{TraceEvaluate}};
  \node[fill=WPCColor,box,minimum height=1cm] (TraceAnalysis)   at (0,-3) {\texttt{TraceAnalysis}};

  \draw[fleche] (traceJson) to[bend left] (TraceReader);
  \draw[fleche] (TraceReader) to[bend left] (traceJson);
  \draw[fleche] (TraceReader) -- (TraceEvaluate) node[midway,right] {event list with ids}; ;


  \draw[fleche] (traceStaticJson) -- (TraceEvaluate) node[midway,below left] {id $\Leftrightarrow$ name}; 
  \draw[fleche] (TraceEvaluate) -- (TraceAnalysis) node[midway,right] {event list with names}; 
 % \draw[fleche] (readBin) -- (traceJson) node[midway,right] {event list}; 

  \draw[fleche,<-] ($(TraceReader.north)+( 1,0)$) -- ($(traceTarget.south)+(+1,0)$) node[midway,right,text width = 2cm] {serial comm}; 
  \draw[fleche,<-] ($(TraceReader.north)+(-.4,0)$) -- ($(traceTarget.south)+(-.4,0)$) node[midway,left ,text width = 2cm] {gdb binary dump}; 
  \draw[fleche,<-] ($(TraceReader.north)+(0.3,0)$) -- ($(traceTarget.south)+(0.3,0)$) node[midway,left] {â€¦}; 
  \draw[line width=0.2mm,dashed] (-10,6.5) -- ++(0,-1) node[above right] {target}-- ++(13,0) -- ++(0,1);
  \draw[line width=0.2mm,dashed] (-10,3.3) -- ++(0,+1) node[below right] {host}-- ++(13,0) -- ++(0,-1);
  \draw[fleche] (TraceAnalysis) -- ++(0,-1) node[below] {high level information based on event analysis (text based, gui)};

\end{tikzpicture}
